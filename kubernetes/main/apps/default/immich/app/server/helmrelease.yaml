---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-server
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultPodOptions:
      enableServiceLinks: false
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [65537]
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: google.feature.node.kubernetes.io/coral
                      operator: In
                      values: ["true"]
                topologyKey: kubernetes.io/hostname

    controllers:
      immich:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: &configMap immich-configmap
          secret.reloader.stakater.com/reload: &secret immich-secret
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - configMapRef:
                  name: *configMap
              - secretRef:
                  name: *secret
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.135.3@sha256:df5bbf4e29eff4688063a005708f8b96f13073200b4a7378f7661568459b31e9
            envFrom: *envFrom
            env:
              LOG_LEVEL: log
              # IMMICH_CONFIG_FILE: /config/immich-config.json
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1100M
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/server/ping
                    port: &port 2283
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 30
              readiness: *probes
              startup:
                enabled: false
    service:
      app:
        controller: immich
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
        hosts:
          - host: &host photos.mcgrath.nz
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        type: configMap
        name: immich-server-config
        globalMounts:
          - path: /config
      library:
        existingClaim: immich-nfs
        globalMounts:
          - path: *mediaLocation
      # geocoding-dump:
      #   type: emptyDir
      #   globalMounts:
      #     - path: /usr/src/app/.reverse-geocoding-dump
      # transformers-cache:
      #   type: emptyDir
      #   globalMounts:
      #     - path: /usr/src/app/.transformers_cache
