---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app image-cleanup
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      image-cleanup:
        type: cronjob
        cronjob:
          schedule: "@weekly"
          timeZone: &timeZone Pacific/Auckland
          parallelism: 3 # Set to total number of nodes
          successfulJobsHistory: 1
          failedJobsHistory: 1
        containers:
          app:
            image:
              repository: alpine
              tag: latest
            env:
              TZ: *timeZone
            command:
              - /bin/sh
              - -c
            args:
              - |
                echo "Cleaning up images on node $(hostname)" &&
                apk add --no-cache curl &&
                curl -LO https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.31.1/crictl-v1.31.1-linux-amd64.tar.gz &&
                tar -xvf crictl-* &&
                mv crictl /usr/local/bin/ &&
                crictl --runtime-endpoint unix:///run/containerd/containerd.sock rmi --prune &&
                echo "Cleanup completed successfully on node $(hostname)" &&
                sleep 5 &&
                exit 0
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext:
              privileged: true
              runAsUser: 0
    defaultPodOptions:
      hostNetwork: true
      hostPID: true
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
    persistence:
      var-lib-containerd:
        type: hostPath
        hostPath: /var/lib/containerd
        hostPathType: Directory
        globalMounts:
          - path: /var/lib/containerd
            readOnly: false
      run-containerd:
        type: hostPath
        hostPath: /run/containerd
        hostPathType: Directory
        globalMounts:
          - path: /run/containerd
            readOnly: true
