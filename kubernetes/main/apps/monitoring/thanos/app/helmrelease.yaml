---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: thanos
      version: 15.5.1
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  dependsOn:
    - name: openebs
      namespace: openebs-system
    - name: rook-ceph-cluster
      namespace: rook-ceph

  valuesFrom:
    - targetPath: objstoreConfig.config.bucket
      kind: ConfigMap
      name: thanos-bucket
      valuesKey: BUCKET_NAME
    - targetPath: objstoreConfig.config.endpoint
      kind: ConfigMap
      name: thanos-bucket
      valuesKey: BUCKET_HOST
    - targetPath: objstoreConfig.config.region
      kind: ConfigMap
      name: thanos-bucket
      valuesKey: BUCKET_REGION
    - targetPath: objstoreConfig.config.access_key
      kind: Secret
      name: thanos-bucket
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: objstoreConfig.config.secret_key
      kind: Secret
      name: thanos-bucket
      valuesKey: AWS_SECRET_ACCESS_KEY

  values:

    image:
      registry: quay.io
      repository: thanos/thanos
      tag: v0.35.1

    objstoreConfig:
      type: s3
      config:
        insecure: true

    additionalEndpoints:
      - dnssrv+_grpc._tcp.kube-prometheus-stack-thanos-discovery.monitoring.svc.cluster.local

    query:
      enabled: true
      replicaLabel: ["__replica__"]
      replicaCount: 2
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      resources:
        requests:
          memory: 128Mi
          cpu: 15m
        limits:
          memory: 1Gi

    queryFrontend:
      enabled: true
      replicaCount: 2
      config: &config |-
        type: REDIS
        config:
          addr: dragonfly.database.svc.cluster.local:6379
          db: 2
      resources:
        requests:
          memory: 128Mi
          cpu: 15m
        limits:
          memory: 1Gi
      ingress:
        enabled: true
        ingressClassName: internal
        hostname: &host thanos-query.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host

    bucketweb:
      enabled: true
      ingress:
        enabled: true
        ingressClassName: internal
        hostname: &host "thanos-bucketweb.${SECRET_DOMAIN}"
        tls: true
        extraTls:
          - hosts:
              - *host

    compactor:
      enabled: true
      extraFlags:
        - "--compact.concurrency"
        - "4"
      retentionResolutionRaw: 7d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
      resources:
        requests:
          memory: 256Mi
          cpu: 15m
        limits:
          memory: 1Gi
      ingress:
        enabled: true
        hostname: &host "thanos-compactor.${SECRET_DOMAIN}"
        ingressClassName: internal
        tls: true
        extraTls:
          - hosts:
              - *host

    storegateway:
      enabled: true
      config: *config
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
      ingress:
        enabled: true
        hostname: &host "thanos-storegateway.${SECRET_DOMAIN}"
        ingressClassName: internal
        tls: true
        extraTls:
          - hosts:
              - *host
      resources:
        requests:
          memory: 128Mi
          cpu: 15m
        limits:
          memory: 1Gi

    ruler:
      enabled: true
      alertmanagers: ["http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093"]
      # clusterName: ${CLUSTER_NAME}
      extraFlags: ["--web.prefix-header=X-Forwarded-Prefix"]
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      dnsDiscovery:
        enabled: true
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
      ingress:
        enabled: true
        hostname: &host "thanos-ruler.${SECRET_DOMAIN}"
        ingressClassName: internal
        tls: true
        extraTls:
          - hosts:
              - *host

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
