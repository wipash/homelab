---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 7.2.1
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    # extraInitContainers:
    #   - name: init-db
    #     image: ghcr.io/onedr0p/postgres-initdb:14.7
    #     imagePullPolicy: IfNotPresent
    #     envFrom:
    #       - secretRef:
    #           name: grafana-secret
    replicas: 2
    rbac:
      pspEnabled: false
    # admin:
    #   existingSecret: grafana-secret
    env:
      # GF_AUTH_GENERIC_OAUTH_API_URL: https://auth.mcgrath.nz/api/oidc/userinfo
      # GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.mcgrath.nz/api/oidc/authorization
      # GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
      # GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://auth.mcgrath.nz/api/oidc/token
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      # GF_PATHS_DATA: /var/lib/grafana/data
      # GF_PATHS_LOGS: /var/log/grafana
      # GF_PATHS_PLUGINS: /var/lib/grafana/plugins
      # GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: https://grafana.mcgrath.nz
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      # auth:
      #   signout_redirect_url: https://auth.mcgrath.nz/logout
      #   oauth_auto_login: false
      # auth.generic_oauth:
      #   enabled: true
      #   name: Authelia
      #   client_id: # Set by env vars
      #   client_secret: # Set by env vars secret
      #   auth_url: # Set by env vars
      #   token_url: # Set by env vars
      #   api_url: # Set by env vars
      #   scopes: "openid profile email groups"
      #   empty_scopes: false
      #   login_attribute_path: preferred_username
      #   groups_attribute_path: groups
      #   name_attribute_path: name
      #   use_pkce: true
      # auth.generic_oauth.group_mapping:
      #   role_attribute_path: |
      #     contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'
      #   org_id: 1
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      news:
        news_feed_enabled: false
      auth.basic:
        enabled: true
        disable_login_form: false
      auth.anonymous:
        enabled: true
        org_id: 1
        org_role: Viewer
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: ceph
            orgId: 1
            folder: Ceph
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/ceph
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: nginx
            orgId: 1
            folder: Nginx
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/nginx
          - name: thanos
            orgId: 1
            folder: Thanos
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/thanos
          - name: unifi
            orgId: 1
            folder: Unifi
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/unifi
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:9090
            isDefault: true
            jsonData:
              prometheusType: Thanos
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local
            jsonData:
              maxLines: 250
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      default:
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        # minio:
        #   # renovate: depName="MinIO Dashboard"
        #   gnetId: 13502
        #   revision: 24
        #   datasource:
        #     - { name: DS_PROMETHEUS, value: Prometheus }
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 33
          datasource: Prometheus
        redis:
          # renovate: depName="Redis Dashboard for Prometheus Redis Exporter 1.x"
          gnetId: 763
          revision: 5
          datasource: Prometheus
        speedtest-exporter:
          # renovate: depName="Speedtest-Exporter Dashboard"
          gnetId: 13665
          revision: 4
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus
        miniflux:
          url: https://raw.githubusercontent.com/miniflux/v2/main/contrib/grafana/dashboard.json
          datasource: Prometheus
      ceph:
        ceph-cluster:
          # renovate: depName="Ceph Cluster"
          gnetId: 2842
          revision: 17
          datasource: Prometheus
        ceph-osd:
          # renovate: depName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: depName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 15
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 16
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 35
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 32
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 27
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      nginx:
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
      thanos:
        thanos-bucket-replicate:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
          datasource: Prometheus
        thanos-compact:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
          datasource: Prometheus
        thanos-overview:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
          datasource: Prometheus
        thanos-query:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
          datasource: Prometheus
        thanos-query-frontend:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
          datasource: Prometheus
        thanos-receieve:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
          datasource: Prometheus
        thanos-rule:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
          datasource: Prometheus
        thanos-sidecar:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
          datasource: Prometheus
        thanos-store:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        hajimari.io/icon: simple-icons:grafana
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: Grafana
        gethomepage.dev/icon: si-grafana
        gethomepage.dev/group: Monitoring
      hosts:
        - &host grafana.mcgrath.nz
      tls:
        - hosts:
            - *host
    imageRenderer:
      enabled: true
      replicas: 2
      networkPolicy:
        limitIngress: false
      serviceMonitor:
        enabled: true
    persistence:
      enabled: false
    testFramework:
      enabled: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
