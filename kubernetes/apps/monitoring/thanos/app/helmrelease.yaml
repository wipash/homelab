---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: thanos
      version: 12.16.2
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:

    image:
      registry: quay.io
      repository: thanos/thanos
      tag: v0.32.5

    existingObjstoreSecret: &secret thanos-objstore-secret

    # objstoreConfig:
    #   type: s3
    #   config:
    #     insecure: true
    #     bucket: thanos
    #     endpoint: ${SECRET_MINIO_ENDPOINT}
    #     access_key: ${SECRET_MINIO_ACCESSKEY_THANOS}
    #     secret_key: ${SECRET_MINIO_SECRETKEY_THANOS}

    query:
      enabled: true
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.64.0.0/10
        hostname: &host "thanos.${SECRET_DOMAIN}"
        tls: true
        extraTls:
          - hosts:
              - *host
      replicaLabels:
        - replica

    queryFrontend:
      enabled: false

    bucketweb:
      enabled: true
      podAnnotations:
        secret.reloader.stakater.com/reload: *secret
      ingress:
        enabled: true
        hostname: &host "thanos-bucketweb.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.64.0.0/10
          hajimari.io/enable: "false"
        tls: true
        extraTls:
          - hosts:
              - *host

    compactor:
      enabled: true
      podAnnotations:
        secret.reloader.stakater.com/reload: *secret
      extraFlags:
        - "--compact.concurrency"
        - "4"
      retentionResolutionRaw: 7d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      persistence:
        enabled: true
        storageClass: local-path
        size: 10Gi
      ingress:
        enabled: true
        hostname: &host "thanos-compactor.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
        annotations:
          hajimari.io/enable: "false"
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.64.0.0/10
        tls: true
        extraTls:
          - hosts:
              - *host

    storegateway:
      enabled: true
      podAnnotations:
        secret.reloader.stakater.com/reload: *secret
      persistence:
        enabled: true
        storageClass: local-path
        size: 10Gi
      ingress:
        enabled: true
        hostname: &host "thanos-storegateway.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
        annotations:
          hajimari.io/enable: "false"
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.64.0.0/10
        tls: true
        extraTls:
          - hosts:
              - *host

    ruler:
      enabled: true
      podAnnotations:
        secret.reloader.stakater.com/reload: *secret
      alertmanagers: ["http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093"]
      # clusterName: ${CLUSTER_NAME}
      extraFlags: ["--web.prefix-header=X-Forwarded-Prefix"]
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      dnsDiscovery:
        enabled: true
      persistence:
        enabled: true
        storageClass: local-path
        size: 10Gi
      ingress:
        enabled: true
        hostname: &host "thanos-ruler.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
        annotations:
          hajimari.io/enable: "false"
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.64.0.0/10
        tls: true
        extraTls:
          - hosts:
              - *host

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
