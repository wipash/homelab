---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 15m
  maxHistory: 2
  timeout: 20m
  install:
    remediation:
      retries: 300
  upgrade:
    remediation:
      retries: 300
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 39.9.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 15m

  values:
    ###
    ### Component values
    ###
    kubeApiServer:
      enabled: true

    kubeControllerManager:
      enabled: false

    kubeEtcd:
      enabled: false

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance

    kubeProxy:
      enabled: false

    kubeScheduler:
      enabled: false

    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
      resources:
        requests:
          cpu: 15m
          memory: 64M
        limits:
          cpu: 26m
          memory: 89M

    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true

    nodeExporter:
      enabled: true
    prometheus-node-exporter:
      resources:
        requests:
          cpu: 23m
          memory: 64M
        limits:
          memory: 64M

      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node

    ###
    ### Prometheus operator values
    ###
    prometheusOperator:
      resources:
        requests:
          cpu: 15m
          memory: 94M
        limits:
          cpu: 60m
          memory: 229M

      prometheusConfigReloader:
        # resource config for prometheusConfigReloader
        resources:
          requests:
            cpu: 11m
            memory: 32M
          limits:
            memory: 32M

    ###
    ### Prometheus instance values
    ###
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        pathType: Prefix
        hosts:
          - &host_prometheus prometheus.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *host_prometheus
            secretName: wildcard-tls

      prometheusSpec:
        # additionalScrapeConfigs:
        #   - job_name: node-exporter
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     honor_timestamps: true
        #     static_configs:
        #       - targets:
        #           - "athena.${HARDWARE_DOMAIN}:9100"
        #           - "bruno.${HARDWARE_DOMAIN}:9100"
        #           - "carmen.${HARDWARE_DOMAIN}:9100"
        #           - "diego.${HARDWARE_DOMAIN}:9100"
        enableAdminAPI: true
        externalLabels:
          cluster: ${CLUSTER_NAME}
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        replicas: 1
        replicaExternalLabelName: "replica"
        resources:
          requests:
            cpu: 200m
            memory: 500M
          limits:
            memory: 5000M
        retention: 2d
        retentionSize: "6GB"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              resources:
                requests:
                  storage: 10Gi
        thanos:
          image: quay.io/thanos/thanos:v0.27.0@sha256:0c010131dc9982a859ddbfec3c1691281e873dcbf2f18db3026972d8ae432229
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml
          # renovate: datasource=docker depName=quay.io/thanos/thanos
          version: "v0.27.0"
        walCompression: true

      thanosService:
        enabled: true

      thanosServiceMonitor:
        enabled: true

    ###
    ### Alertmanager values
    ###
    alertmanager:
      config:
        receivers:
          - name: "null"
          - name: "pushover"
            pushover_configs:
              - user_key: ${SECRET_PUSHOVER_USER_KEY}
                token: ${SECRET_PUSHOVER_PROMETHEUS_APP_KEY}
                send_resolved: true
                html: true
                priority: |-
                  {{ if eq .Status "firing" }}1{{ else }}-1{{ end }}
                url_title: View in Alert Manager
                title: |-
                  [{{ .Status | toUpper -}}
                  {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
                  ] {{ .CommonLabels.alertname }}
                message: |-
                  {{- range .Alerts }}
                    {{- if ne .Labels.severity "" }}
                      <b>Severity:</b> <i>{{ .Labels.severity }}</i>
                    {{- else }}
                      <b>Severity:</b> <i>N/A</i>
                    {{- end }}
                    {{- if ne .Annotations.description "" }}
                      <b>Description:</b> <i>{{ .Annotations.description }}</i>
                    {{- else if ne .Annotations.summary "" }}
                      <b>Summary:</b> <i>{{ .Annotations.summary }}</i>
                    {{- else if ne .Annotations.message "" }}
                      <b>Message:</b> <i>{{ .Annotations.message }}</i>
                    {{- else }}
                      <b>Description:</b> <i>N/A</i>
                    {{- end }}
                    {{- if gt (len .Labels.SortedPairs) 0 }}
                      <b>Details:</b>
                      {{- range .Labels.SortedPairs }}
                        â€¢ <b>{{ .Name }}:</b> <i>{{ .Value }}</i>
                      {{- end }}
                    {{- end }}
                  {{- end }}
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "pushover"
          routes:
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor|Watchdog"
            - receiver: "pushover"
              match_re:
                # severity: critical|warning
                severity: critical
              continue: true

        inhibit_rules:
          - source_match:
              alertname: "InfoInhibitor"
            target_match:
              severity: "info"
            equal: ["namespace"]
          - source_match:
              severity: "critical"
            target_match:
              severity: "warning"
            equal: ["alertname", "namespace"]

      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              resources:
                requests:
                  storage: 1Gi

        resources:
          requests:
            cpu: 10m
            memory: 37M
          limits:
            cpu: 40m
            memory: 110M

      ingress:
        enabled: true
        ingressClassName: nginx
        pathType: Prefix
        hosts:
          - &host_alertmanager alertmanager.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *host_alertmanager
            secretName: wildcard-tls

      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
